{"version":3,"sources":["tagforce_logo_and_text_black.jpg","store/model.js","store/store.js","components/Footer/Footer.js","components/Header/AddUserModal.js","components/Header/AppBar.js","components/Calendar/CalendarHeader/MonthNavArrow.js","components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarDayNames/CalendarDayNames.js","components/Calendar/CalendarDayCells/DayCell/DayNotifier.js","components/Calendar/CalendarDayCells/DayCell/DayModal/ModalTimeRangePicker.js","components/Calendar/CalendarDayCells/DayCell/DayModal/ModalNotifier.js","components/Calendar/CalendarDayCells/DayCell/DayModal/DayModal.js","components/Calendar/CalendarDayCells/DayCell/DayCell.js","components/Calendar/CalendarDayCells/CalendarDayCells.js","components/Calendar/Calendar.js","components/LoginPage/LoginPage.js","App.js","index.js"],"names":["module","exports","host","model","data","setData","action","state","fetchData","thunk","actions","a","fetch","res","json","loggedUser","setLoggedUser","fetchLoggedUser","payload","userData","currentMonth","Date","selectedDate","onSelectDate","day","nextMonth","dateFns","prevMonth","addShift","method","headers","body","JSON","stringify","updatedData","addMessage","delShift","store","createStore","Footer","className","AddUserModal","props","React","useState","nameValue","setNameValue","appointAdmin","setAppointAdmin","Dialog","open","isModalOpen","onClose","onModalClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","FormControlLabel","control","Checkbox","icon","checkedIcon","name","color","DialogActions","Button","onClick","isAdmin","then","resp","console","log","makeUser","size","useStyles","makeStyles","theme","root","flexGrow","zIndex","position","appBar","background","menuButton","marginRight","spacing","title","ButtonAppBar","setModalOpen","useStoreState","classes","DisplayAddMessage","AppBar","Toolbar","Typography","variant","IconButton","style","display","localStorage","clear","document","location","href","MonthNavArrow","place","direction","CalendarHeader","useStoreActions","CalendarDayNames","dayNames","dayName","push","key","HtmlTooltip","withStyles","tooltip","Tooltip","DayNotifier","items","map","item","indexOf","arrow","placement","StyledTimePicker","width","margin","TimePicker","ModalTimeRangePicker","utils","DateFnsUtils","shiftStartTime","setShiftStartTime","minutesStep","shiftEndTime","setShiftEndTime","ModalNotifier","tooltipOpen","setTooltipOpen","length","disabled","handleTooltipOpen","onMouseOver","DayModal","modalTitle","userHasShift","undefined","userShift","useEffect","startTime","setHours","endTime","messageValue","setMessageValue","DisplayDelShift","DisplayReserveDay","DisplaySave","dayForDB","dayAlerts","dayFormattedMessages","dayWorkers","newShiftPayload","newShift","user","isAllDay","disableElevation","border","dayColor","shiftPayload","newMessagePayload","newMessage","content","DayCell","dayShifts","dayData","shifts","alerts","dayMessages","messages","find","shift","cellClassName","monthStart","message","messagesNotifier","alertsNotifier","dayNotifiers","formattedDate","CalendarDayCells","monthEnd","startDate","endDate","rows","days","i","dbDay","date","Calendar","username","getItem","LoginPage","usernameValue","setuserNameValue","passwordValue","setPasswordValue","setIsUserKnown","src","TagforceLogo","alt","height","userNameValue","setItem","authorizeUser","App","isUserKnown","redirect","setRedirect","to","path","ReactDOM","render","getElementById"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,0D,maCGrCC,EAAO,2BA0EEC,EAxED,CACZC,KAAM,GAENC,QAASC,aAAO,SAACC,EAAOH,GACtBG,EAAMH,KAAOA,KAIfI,UAAWC,YAAK,uCAAC,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,MAAM,WAAD,OAAYV,EAAZ,iBADR,cACTW,EADS,gBAEIA,EAAIC,OAFR,OAETV,EAFS,OAGfM,EAAQL,QAAQD,GAHD,2CAAD,uDAMhBW,WAAY,GAEZC,cAAeV,aAAO,SAACC,EAAOQ,GAC5BR,EAAMQ,WAAaA,KAGrBE,gBAAiBR,YAAK,uCAAC,WAAOC,EAASQ,GAAhB,iBAAAP,EAAA,sEACHC,MAAM,WAAD,OAAYV,EAAZ,0BAAkCgB,IADpC,cACfL,EADe,gBAEEA,EAAIC,OAFN,OAEfK,EAFe,OAGrBT,EAAQM,cAAcG,GAHD,2CAAD,yDAMtBC,aAAc,IAAIC,KAClBC,aAAc,IAAID,KAElBE,aAAcjB,aAAO,SAACC,EAAOiB,GAC3BjB,EAAMe,aAAeE,KAGvBC,UAAWnB,aAAO,SAACC,EAAOa,GACxBb,EAAMa,aAAeM,IAAkBN,EAAc,MAGvDO,UAAWrB,aAAO,SAACC,EAAOa,GACxBb,EAAMa,aAAeM,IAAkBN,EAAc,MAGvDQ,SAAUnB,YAAK,uCAAC,WAAOC,EAASQ,GAAhB,iBAAAP,EAAA,sEACIC,MAAM,WAAD,OAAYV,EAAZ,kBAAkC,CACvD2B,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUf,KAJT,cACRL,EADQ,gBAMYA,EAAIC,OANhB,OAMRoB,EANQ,OAOdxB,EAAQL,QAAQ6B,GAPF,2CAAD,yDAUfC,WAAY1B,YAAK,uCAAC,WAAOC,EAASQ,GAAhB,iBAAAP,EAAA,sEACEC,MAAM,WAAD,OAAYV,EAAZ,oBAAoC,CACzD2B,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUf,KAJP,cACVL,EADU,gBAMUA,EAAIC,OANd,OAMVoB,EANU,OAOhBxB,EAAQL,QAAQ6B,GAPA,2CAAD,yDAUjBE,SAAU3B,YAAK,uCAAC,WAAOC,EAASQ,GAAhB,iBAAAP,EAAA,sEACIC,MAAM,WAAD,OAAYV,EAAZ,qBAAqC,CAC1D2B,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUf,KAJT,cACRL,EADQ,gBAMYA,EAAIC,OANhB,OAMRoB,EANQ,OAOdxB,EAAQL,QAAQ6B,GAPF,2CAAD,0DC9DFG,EADDC,YAAYnC,G,OCoBXoC,MApBf,WAKE,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,cAEZ,4CAEF,wBAAIA,UAAU,eAGZ,6C,2KCoEOC,G,OAjEM,SAACC,GAAW,IAAD,EACIC,IAAMC,SAAS,IADnB,mBACvBC,EADuB,KACZC,EADY,OAEUH,IAAMC,UAAS,GAFzB,mBAEvBG,EAFuB,KAETC,EAFS,KAoB9B,OACE,kBAACC,EAAA,EAAD,CACEC,KAAMR,EAAMS,YACZC,QAASV,EAAMW,aACfC,kBAAgB,oBAChBd,UAAU,kBAEV,kBAACe,EAAA,EAAD,CAAaC,GAAG,qBAAhB,cACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXC,MAAM,aACNJ,GAAG,OACHK,KAAK,OACLC,WAAW,EACXC,MAAOlB,EACPmB,SAAU,SAACC,GACTnB,EAAamB,EAAMC,OAAOH,UAG9B,6BACE,kBAACI,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,KAAM,kBAAC,IAAD,MACNC,YAAa,kBAAC,IAAD,MACbC,KAAK,YACLC,MAAM,YACNV,MAAOhB,EACPiB,SAAU,kBAAMhB,GAAiBD,MAGrCa,MAAM,yBAIZ,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QA1Cd,YAXA,WACE,IAAM7C,EAAO,CAAEyC,KAAM3B,EAAWgC,QAAS9B,GACzCnC,MAAM,WAAD,OARI,2BAQJ,iBAAiC,CACpCiB,OAAQ,OACRE,KAAMC,KAAKC,UAAUF,GACrBD,QAAS,CAAE,eAAgB,sBAC1BgD,MAAK,SAACC,GACPC,QAAQC,IAAI,uBAKdC,GACApC,EAAa,KAwCuB2B,MAAM,UAAUU,KAAK,SAArD,WC5DFC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,OAAQ,EACRC,SAAU,YAEZC,OAAQ,CAENC,WAAY,qBAEdC,WAAY,CACVC,YAAaR,EAAMS,QAAQ,IAE7BC,MAAO,CACLR,SAAU,OAuDCS,MAnDf,WAAyB,IAAD,EACctD,IAAMC,UAAS,GAD7B,mBACfO,EADe,KACF+C,EADE,KAGhBnF,EAAaoF,aAAc,SAAC5F,GAAD,OAAWA,EAAMQ,cAE5CqF,EAAUhB,IACViB,EAAoBtF,EAAW8D,QAAU,GAAK,OAOpD,OACE,yBAAKrC,UAAW4D,EAAQb,MACtB,kBAACe,EAAA,EAAD,CAAQZ,SAAS,UACf,kBAACa,EAAA,EAAD,CAAS/D,UAAW4D,EAAQT,QAItB,kBAACa,EAAA,EAAD,CAAYC,QAAQ,KAAKjE,UAAW4D,EAAQJ,OAA5C,UAKJ,kBAACU,EAAA,EAAD,CACEjC,MAAM,UACNkC,MAAO,CAAEC,QAASP,EAAmBP,YAAa,QAClDlB,QAAS,kBAAMsB,GAAa,KAE5B,kBAAC,IAAD,OAEF,kBAAC,EAAD,CACE/C,YAAaA,EACbE,aAAc,kBAAM6C,GAAa,MAQnC,kBAACvB,EAAA,EAAD,CAAQF,MAAM,UAAUG,QAlChC,WACEiC,aAAaC,QACbC,SAASC,SAASC,KAAO,MAgCnB,c,SCjEKC,MAVf,SAAuBxE,GACrB,OACE,yBAAKF,UAAS,kBAAaE,EAAMyE,QAC/B,yBAAK3E,UAAU,OAAOoC,QAASlC,EAAMpC,QAArC,WACWoC,EAAM0E,a,OC2BRC,MAzBf,WACE,IAAMjG,EAAe+E,aAAc,SAAC5F,GAAD,OAAWA,EAAMa,gBAC9CO,EAAY2F,aAAgB,SAAC5G,GAAD,OAAaA,EAAQiB,aACjDF,EAAY6F,aAAgB,SAAC5G,GAAD,OAAaA,EAAQe,aAGvD,OACE,yBAAKe,UAAU,0BACb,kBAAC,EAAD,CACE2E,MAAM,QACNC,UAAU,OACV9G,OAAQ,kBAAMqB,EAAUP,MAE1B,yBAAKoB,UAAU,+BACb,8BAAOd,IAAeN,EATT,eAWf,kBAAC,EAAD,CACE+F,MAAM,MACNC,UAAU,QACV9G,OAAQ,kBAAMmB,EAAUL,Q,OCVjBmG,MAbf,WAEE,IADA,IAAMC,EAAW,GACjB,MAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAA/D,eAAuE,CAAlE,IAAIC,EAAO,KACdD,EAASE,KACP,yBAAKlF,UAAU,iBAAiBmF,IAAKF,GAClCA,IAKP,OAAO,yBAAKjF,UAAU,YAAYgF,I,6FCT9BI,GAAcC,cAAW,SAACvC,GAAD,MAAY,CACzCwC,QAAS,MADSD,CAKhBE,MAcWC,OAZf,SAAqBtF,GACnB,IAAMsD,EAAQtD,EAAMuF,MAAMC,KAAI,SAACC,GAAD,OAC5B,kBAAC3B,EAAA,EAAD,CAAYmB,IAAKjF,EAAMuF,MAAMG,QAAQD,IAAQA,MAG/C,OACE,kBAACP,GAAD,CAAaS,OAAK,EAACC,UAAU,MAAMtC,MAAOA,GACxC,0BAAMxD,UAAS,QAAWE,EAAM4B,Q,6BCdhCiE,GAAmBV,aAAW,CAClCtC,KAAM,CACJiD,MAAO,SACPC,OAAQ,WAHaZ,CAKtBa,MAqBYC,OAnBf,SAA8BjG,GAC5B,OACE,kBAAC,KAAD,CAAyBkG,MAAOC,MAC9B,kBAACN,GAAD,CACE3E,MAAM,QACNG,MAAOrB,EAAMoG,eACb9E,SAAUtB,EAAMqG,kBAChBC,YAAa,IAEf,kBAACT,GAAD,CACE3E,MAAM,MACNG,MAAOrB,EAAMuG,aACbjF,SAAUtB,EAAMwG,gBAChBF,YAAa,MCKNG,OAzBf,SAAuBzG,GAAQ,IAAD,EACUC,IAAMC,UAAS,GADzB,mBACrBwG,EADqB,KACRC,EADQ,KAE5B,GAAI3G,EAAMuF,MAAMqB,OAAS,EACvB,OACE,kBAAC3E,EAAA,EAAD,CAAQ4E,UAAQ,GACd,0BAAM/G,UAAS,iBAAoBE,EAAM4B,OAI/C,IAAMkF,EAAoB,WACxBH,GAAe,IAEXrD,EAAQtD,EAAMuF,MAAMC,KAAI,SAACC,GAAD,OAC5B,kBAAC3B,EAAA,EAAD,CAAYmB,IAAKjF,EAAMuF,MAAMG,QAAQD,IAAQA,MAG/C,OACE,kBAACJ,GAAA,EAAD,CAASM,OAAK,EAACC,UAAU,MAAMtC,MAAOA,EAAO5C,QAAS,kBAAMiG,GAAe,IAAQnG,KAAMkG,GACvF,kBAACzE,EAAA,EAAD,CAAQC,QAAS4E,EAAmBC,YAAaD,GAC/C,0BAAMhH,UAAS,iBAAoBE,EAAM4B,S,OC2JlCoF,OAnKf,SAAkBhH,GAChB,IACMiH,EAAajI,IAAegB,EAAMlB,IADrB,gBAEboI,OAAmCC,IAApBnH,EAAMoH,UAG3BnH,IAAMoH,WAAU,WACdhB,EACEa,EAAelH,EAAMoH,UAAUE,UAAYtH,EAAMlB,IAAIyI,SAAS,IAEhEf,EACEU,EAAelH,EAAMoH,UAAUI,QAAUxH,EAAMlB,IAAIyI,SAAS,OAG7D,CAACL,IAEJ,IAAM7I,EAAaoF,aAAc,SAAC5F,GAAD,OAAWA,EAAMQ,cAC5Ca,EAAW0F,aAAgB,SAAC5G,GAAD,OAAaA,EAAQkB,YAChDQ,EAAWkF,aAAgB,SAAC5G,GAAD,OAAaA,EAAQ0B,YAChDD,EAAamF,aAAgB,SAAC5G,GAAD,OAAaA,EAAQyB,cAnBjC,EAqBqBQ,IAAMC,SAAS,MArBpC,mBAqBhBkG,EArBgB,KAqBAC,EArBA,OAsBiBpG,IAAMC,SAAS,MAtBhC,mBAsBhBqG,EAtBgB,KAsBFC,EAtBE,OAuBiBvG,IAAMC,SAAS,IAvBhC,mBAuBhBuH,EAvBgB,KAuBFC,EAvBE,KAyBjB/D,EAAoBtF,EAAW8D,QAAU,GAAK,OAC9CwF,EAAkBT,EAAe,GAAK,OACtCU,EAAqBV,EAAoB,OAAL,GACpCW,GAAeX,GAAgBO,EAAab,OAAS,EAAI,GAAK,OAE9DkB,EAAW9H,EAAMlB,IAAIyI,SAAS,GA0DpC,OACE,kBAAChH,EAAA,EAAD,CACEC,KAAMR,EAAMS,YACZC,QAASV,EAAMW,aACfC,kBAAgB,oBAChBd,UAAU,aAEV,kBAACe,EAAA,EAAD,CAAaC,GAAG,qBAAqBmG,GACrC,kBAAClG,EAAA,EAAD,KACE,kBAAC,GAAD,CAAea,KAAK,SAAS2D,MAAOvF,EAAM+H,YAC1C,kBAAC,GAAD,CAAenG,KAAK,UAAU2D,MAAOvF,EAAMgI,uBAC3C,kBAAC,GAAD,CAAepG,KAAK,aAAa2D,MAAOvF,EAAMiI,aAC9C,6BACA,yBAAKhE,MAAO,CAAEC,QAAS0D,IACrB,kBAACvC,GAAA,EAAD,CAASM,OAAK,EAACC,UAAU,MAAMtC,MAAM,oBACnC,kBAACrB,EAAA,EAAD,CACEC,QArEZ,WACE,IAAMgG,EAAkB,CACtBpJ,IAAKgJ,EACLK,SAAU,CACRC,KAAM/J,EAAWyD,KACjBwF,UAAWlB,EACXoB,QAASjB,EACT8B,UAAU,IAGd/F,QAAQC,IAAI2F,GACZhJ,EAASgJ,GACTlI,EAAMW,gBA0DIS,WAAS,EACT2C,QAAQ,YACRuE,kBAAgB,EAChBrE,MAAO,CACLf,WAAY,yBACZqF,OAAQ,wBAGV,0BAAMzI,UAAS,QAAf,mBAVF,qBAcJ,yBAAKA,UAAS,4BAAuBE,EAAMwI,WACzC,kBAAC,GAAD,CACE1J,IAAKkB,EAAMlB,IACXsH,eAAgBA,EAChBC,kBAAmBA,EACnBE,aAAcA,EACdC,gBAAiBA,KAGrB,yBAAKvC,MAAO,CAAEC,QAASyD,IACrB,kBAACtC,GAAA,EAAD,CAASM,OAAK,EAACC,UAAU,MAAMtC,MAAM,gBACnC,kBAACrB,EAAA,EAAD,CACEC,QAlDZ,WACE,IAAMuG,EAAe,CACnB3J,IAAKgJ,EACLM,KAAMpI,EAAMoH,UAAUgB,MAExB1I,EAAS+I,GACTzI,EAAMW,gBA6CIS,WAAS,EACT2C,QAAQ,YACRuE,kBAAgB,GAEhB,0BAAMxI,UAAS,QAAf,UANF,kBAUJ,yBAAKmE,MAAO,CAAEC,QAASP,IACrB,kBAAC3C,EAAA,EAAD,CACEC,WAAW,EACXH,GAAG,OACHI,MAAM,gBACNC,KAAK,OACLC,WAAS,EACTC,MAAOoG,EACPnG,SAAU,SAACC,GACTmG,EAAgBnG,EAAMC,OAAOH,YAKrC,kBAACW,EAAA,EAAD,KACE,yBAAKiC,MAAO,CAAEC,QAAS2D,IACrB,kBAAC5F,EAAA,EAAD,CAAQC,QAxGhB,WACE,GAAIuF,EAAab,OAAS,EAAG,CAE3B,IAAMsB,EAAkB,CACtBpJ,IAAKgJ,EACLK,SAAU,CACRC,KAAM/J,EAAWyD,KACjBwF,UAAWlB,EACXoB,QAASjB,EACT8B,UAAU,IAGd/F,QAAQC,IAAI2F,GACZhJ,EAASgJ,GACTlI,EAAMW,mBACD,CAEL,IAAM+H,EAAoB,CACxB5J,IAAKgJ,EACLa,WAAY,CACVP,KAAM/J,EAAWyD,KACjB8G,QAASnB,IAGbhI,EAAWiJ,GACXhB,EAAgB,MA+EqB3F,MAAM,UAAUU,KAAK,SAAtD,Y,OCnFKoG,OA9Ef,SAAiB7I,GACf,IAAMpB,EAAe6E,aAAc,SAAC5F,GAAD,OAAWA,EAAMe,gBAC9CC,EAAe+F,aAAgB,SAAC5G,GAAD,OAAaA,EAAQa,gBACpDR,EAAaoF,aAAc,SAAC5F,GAAD,OAAWA,EAAMQ,cAH5B,EAYc4B,IAAMC,UAAS,GAZ7B,mBAYfO,EAZe,KAYF+C,EAZE,KAchBsF,OAA8B3B,IAAlBnH,EAAM+I,QAAwB,GAAK/I,EAAM+I,QAAQC,OAC7DjB,OAA8BZ,IAAlBnH,EAAM+I,QAAwB,GAAK/I,EAAM+I,QAAQE,OAC7DC,OAAgC/B,IAAlBnH,EAAM+I,QAAwB,GAAK/I,EAAM+I,QAAQI,SAE/D/B,EAAY0B,EAAUM,MAAK,SAACC,GAAD,OAAWA,EAAMjB,OAAS/J,EAAWyD,QAChE0G,OACUrB,IAAdC,EAA0B,KAAOA,EAAUiB,SAAW,SAAW,QAE7DiB,EAAiBtK,IAAoBgB,EAAMlB,IAAKkB,EAAMuJ,YAExDvK,IAAmBgB,EAAMlB,KACzB,SACAE,IAAkBgB,EAAMlB,IAAKkB,EAAMpB,cACnC,WACA,KALA,WAOEqJ,EAAaa,EAAUtD,KAAI,SAAC6D,GAAD,OAAWA,EAAMjB,QAE5CJ,EAAuBkB,EAAY1D,KACvC,SAACgE,GAAD,gBAAgBA,EAAQpB,KAAxB,aAAiCoB,EAAQZ,YAGrCa,EAAmBP,EAAYtC,OAAS,EAAI,KAChD,kBAAC,GAAD,CAAahF,KAAK,UAAU2D,MAAOyC,EAAsB/C,IAAI,MAEzDyE,EAAiB3B,EAAUnB,OAAS,EAAI,KAC5C,kBAAC,GAAD,CAAahF,KAAK,SAAS2D,MAAOwC,EAAW9C,IAAI,MAE7C0E,OAAiCxC,IAAlBnH,EAAM+I,QACvB,KACA,CAACU,EAAkBC,GAUvB,OACE,oCACE,yBACE5J,UAAS,mBAAcwJ,GACvBpH,QAAS,kBAZMpD,EAYYE,KAAegB,EAAMlB,UAXhDE,IAAkBF,EAAKF,GACzB4E,GAAa,GAEb3E,EAAaC,IAJjB,IAAqBA,IAcf,0BAAMgB,UAAS,iBAAY0I,IAAaxI,EAAM4J,eAC9C,0BAAM9J,UAAU,MAAME,EAAM4J,eAC5B,yBAAK9J,UAAU,kBAAkB6J,IAEnC,kBAAC,GAAD,CACE7K,IAAKkB,EAAMlB,IACX2B,YAAaA,EACbE,aAAc,kBAAM6C,GAAa,IACjCwE,qBAAsBA,EACtBC,WAAYA,EACZF,UAAWA,EACXX,UAAWA,EACXoB,SAAUA,M,OC3BHqB,OA9Cf,WAiBE,IAhBA,IAAMnL,EAAe+E,aAAc,SAAC5F,GAAD,OAAWA,EAAMa,gBAC9CE,EAAe6E,aAAc,SAAC5F,GAAD,OAAWA,EAAMe,gBAC9ClB,EAAO+F,aAAc,SAAC5F,GAAD,OAAWA,EAAMH,QAGtC6L,EAAavK,IAAqBN,GAClCoL,EAAW9K,IAAmBuK,GAC9BQ,EAAY/K,IAAoBuK,GAChCS,EAAUhL,IAAkB8K,GAG5BG,EAAO,GAETC,EAAO,GACPpL,EAAMiL,EAEHjL,GAAOkL,GAAS,CACrB,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMP,EAAgB5K,IAAeF,EARtB,KAUTiK,EAAUrL,EAAK0L,MAAK,SAACgB,GAAD,OACxBpL,IAAkB,IAAIL,KAAKyL,EAAMC,MAAOvL,MAE1CoL,EAAKlF,KACH,kBAAC,GAAD,CACEC,IAAKnG,EACLA,IAAKA,EACLiK,QAASA,EACTQ,WAAYA,EACZ3K,aAAcA,EACdgL,cAAeA,KAGnB9K,EAAME,IAAgBF,EAAK,GAE7BmL,EAAKjF,KACH,yBAAKlF,UAAU,MAAMmF,IAAKnG,GACvBoL,IAGLA,EAAO,GAET,OAAO,yBAAKpK,UAAU,QAAQmK,I,OCnBjBK,OAvBf,WAEE,IAAMxM,EAAY8G,aAAgB,SAAA5G,GAAO,OAAIA,EAAQF,aAC/CS,EAAkBqG,aAAgB,SAAA5G,GAAO,OAAIA,EAAQO,mBAW3D,OATA8I,qBAAU,WACR,IAAMkD,EAAWpG,aAAaqG,QAAQ,YAClCD,IACFzM,IACAS,EAAgBgM,MAGjB,IAGD,yBAAKzK,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,iDC6DS2K,OAzEf,SAAmBzK,GAAQ,IAAD,EACkBC,IAAMC,SAAS,IADjC,mBACjBwK,EADiB,KACFC,EADE,OAEkB1K,IAAMC,SAAS,IAFjC,mBAEjB0K,EAFiB,KAEFC,EAFE,KAGlBC,EAAiB9K,EAAM8K,eAa7B,OACE,yBAAKhL,UAAU,cACb,yBAAKA,UAAU,UACb,kBAACkE,EAAA,EAAD,CAAYjC,MAAM,UAAUjC,UAAU,SACpC,0BAAMA,UAAU,mBACd,yBAAKiL,IAAKC,KAAcC,IAAI,gBAAgBC,OAAO,UAErD,0BAAMpL,UAAU,gBAAhB,KACA,kBAAC,KAAD,MACA,kBAACgE,EAAA,EAAD,CACEC,QAAQ,WACRE,MAAO,CAAE8B,OAAQ,yBAFnB,WAOF,yBAAKjG,UAAU,OACb,kBAACkB,EAAA,EAAD,CACEE,MAAM,YACNJ,GAAG,WACHK,KAAK,WACLF,WAAW,EACXG,WAAW,EACXC,MAAOqJ,EACPpJ,SAAU,SAACC,GACToJ,EAAiBpJ,EAAMC,OAAOH,WAIpC,yBAAKvB,UAAU,OACb,kBAACkB,EAAA,EAAD,CACEE,MAAM,YACNJ,GAAG,WACHK,KAAK,WACLF,WAAW,EACXG,WAAW,EACXC,MAAOuJ,EACPtJ,SAAU,SAACC,GACTsJ,EAAiBtJ,EAAMC,OAAOH,WAIpC,yBAAKvB,UAAU,OACb,kBAACmC,EAAA,EAAD,CACEC,QAAS,kBAvDnB,SAAuBiJ,EAAeP,GACpC1M,MAAM,WAAD,OARI,2BAQJ,4BAAoCwM,EAApC,YAAqDE,IACvDxI,MAAK,SAACC,GAAD,OAAUA,EAAKjE,UACpBgE,MAAK,SAAC1E,GACDA,IACFyG,aAAaiH,QAAQ,WAAYV,GACjCI,GAAe,OAiDEO,CAAcX,EAAeE,IAC5C7I,MAAM,UACNX,WAAS,EACT2C,QAAQ,YAJV,cCnBKuH,OAvCf,WAAgB,IAAD,EACyBrL,IAAMC,SACL,OAArCiE,aAAaqG,QAAQ,aAFV,mBACNe,EADM,KACOT,EADP,OAImB7K,IAAMC,SAAS,IAJlC,mBAINsL,EAJM,KAIIC,EAJJ,KAUb,OAJApE,qBAAU,WACMoE,EAAdF,EAA0B,YAA2B,YACpD,CAACA,IAGF,yBAAKzL,UAAU,OACb,kBAAC,IAAD,CAAeH,MAAOA,GACpB,kBAAC,IAAD,KACG6L,EAAW,kBAAC,IAAD,CAAUE,GAAIF,IAAe,qCACzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,KAAK,UACV,kBAAC,GAAD,CACEJ,YAAaA,EACbT,eAAgBA,KAGpB,kBAAC,IAAD,CAAOa,KAAK,aACV,kBAAC,EAAD,MACA,8BACE,kBAAC,GAAD,OAEF,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,IAAD,CAAUD,GAAIF,UCzC5BI,IAASC,OACP,oCACE,kBAAC,GAAD,OAEFxH,SAASyH,eAAe,W","file":"static/js/main.5edd76d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tagforce_logo_and_text_black.d5eefb90.jpg\";","import { action, thunk } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nconst host = \"tagluz.azurewebsites.net\";\r\n\r\nconst model = {\r\n  data: [],\r\n\r\n  setData: action((state, data) => {\r\n    state.data = data;\r\n    // console.log(data)\r\n  }),\r\n\r\n  fetchData: thunk(async (actions) => {\r\n    const res = await fetch(`https://${host}/days/getAll`);\r\n    const data = await res.json();\r\n    actions.setData(data);\r\n  }),\r\n\r\n  loggedUser: {},\r\n\r\n  setLoggedUser: action((state, loggedUser) => {\r\n    state.loggedUser = loggedUser;\r\n  }),\r\n\r\n  fetchLoggedUser: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/users/getUser/${payload}`);\r\n    const userData = await res.json();\r\n    actions.setLoggedUser(userData);\r\n  }),\r\n\r\n  currentMonth: new Date(),\r\n  selectedDate: new Date(),\r\n\r\n  onSelectDate: action((state, day) => {\r\n    state.selectedDate = day;\r\n  }),\r\n\r\n  nextMonth: action((state, currentMonth) => {\r\n    state.currentMonth = dateFns.addMonths(currentMonth, 1);\r\n  }),\r\n\r\n  prevMonth: action((state, currentMonth) => {\r\n    state.currentMonth = dateFns.subMonths(currentMonth, 1);\r\n  }),\r\n\r\n  addShift: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/days/addShift`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const updatedData = await res.json();\r\n    actions.setData(updatedData);\r\n  }),\r\n\r\n  addMessage: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/days/addMessage`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const updatedData = await res.json();\r\n    actions.setData(updatedData);\r\n  }),\r\n\r\n  delShift: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/days/deleteShift`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const updatedData = await res.json();\r\n    actions.setData(updatedData);\r\n  }),\r\n};\r\n\r\nexport default model;\r\n","import { createStore } from \"easy-peasy\";\r\nimport model from \"./model\";\r\n\r\nconst store = createStore(model);\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction Footer() {\r\n  // const [versionModalOpen, setVersionModalOpen] = React.useState(false);\r\n  // const [aboutModalOpen, setAboutModalOpen] = React.useState(false);\r\n  // const [contactModalopen, setContactModalOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <ul className='left-items'>\r\n        {/* <li>App by Pitamer</li> */}\r\n        <li>Tagluz 0.91</li>\r\n      </ul>\r\n      <ul className='right-items'>\r\n        {/* <li>About</li> */}\r\n        {/* <li>Contact</li> */}\r\n        <li>by Pitamar</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n// import { useStoreState/*, useStoreActions*/ } from \"easy-peasy\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst host = 'tagluz.azurewebsites.net'\r\n\r\nconst AddUserModal = (props) => {\r\n  const [nameValue, setNameValue] = React.useState(\"\");\r\n  const [appointAdmin, setAppointAdmin] = React.useState(false);\r\n\r\n  function makeUser() {\r\n    const body = { name: nameValue, isAdmin: appointAdmin };\r\n    fetch(`https://${host}/users/mkUser`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }).then((resp) => {\r\n      console.log(\"posted new user!\");\r\n    });\r\n  }\r\n\r\n  function handleAddUser() {\r\n    makeUser();\r\n    setNameValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isModalOpen}\r\n      onClose={props.onModalClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      className=\"add-user-modal\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add a User</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus={true}\r\n          label=\"User Name:\"\r\n          id=\"name\"\r\n          type=\"name\"\r\n          fullWidth={false}\r\n          value={nameValue}\r\n          onChange={(event) => {\r\n            setNameValue(event.target.value);\r\n          }}\r\n        />\r\n        <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                icon={<VerifiedUserOutlinedIcon />}\r\n                checkedIcon={<VerifiedUserIcon />}\r\n                name=\"makeAdmin\"\r\n                color=\"secondary\"\r\n                value={appointAdmin}\r\n                onChange={() => setAppointAdmin(!appointAdmin)}\r\n              />\r\n            }\r\n            label=\"Appoint user admin\"\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleAddUser} color=\"primary\" size=\"small\">\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddUserModal;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\n// import TodayIcon from '@material-ui/icons/Today';\r\n// import TimerIcon from '@material-ui/icons/Timer';\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\n// import LoyaltyOutlinedIcon from \"@material-ui/icons/LoyaltyOutlined\";\r\n\r\nimport AddUserModal from \"./AddUserModal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 2,\r\n    position: \"relative\",\r\n  },\r\n  appBar: {\r\n    // background: \"#1976d2\",\r\n    background: \"var(--main-color)\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction ButtonAppBar() {\r\n  const [isModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const loggedUser = useStoreState((state) => state.loggedUser);\r\n\r\n  const classes = useStyles();\r\n  const DisplayAddMessage = loggedUser.isAdmin ? \"\" : \"none\";\r\n\r\n  function onLogout() {\r\n    localStorage.clear();\r\n    document.location.href = \"/\";\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.appBar}>\r\n          {/* <Typography variant=\"h6\" className={classes.title}>\r\n            <IconButton color=\"inherit\">\r\n              <LoyaltyOutlinedIcon /> */}\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Tagluz\r\n              </Typography>\r\n            {/* </IconButton>\r\n          </Typography> */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            style={{ display: DisplayAddMessage, marginRight: \"1rem\" }}\r\n            onClick={() => setModalOpen(true)}\r\n          >\r\n            <PersonAddIcon />\r\n          </IconButton>\r\n          <AddUserModal\r\n            isModalOpen={isModalOpen}\r\n            onModalClose={() => setModalOpen(false)}\r\n          />\r\n          {/* <IconButton color=\"inherit\">\r\n            <TodayIcon />\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <TimerIcon />\r\n          </IconButton> */}\r\n          <Button color=\"inherit\" onClick={onLogout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar;\r\n","import React from \"react\";\r\n\r\nfunction MonthNavArrow(props) {\r\n  return (\r\n    <div className={`col col-${props.place}`}>\r\n      <div className=\"icon\" onClick={props.action}>\r\n        chevron_{props.direction}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthNavArrow;\r\n","import React from \"react\";\r\nimport * as dateFns from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nimport MonthNavArrow from \"./MonthNavArrow\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction CalendarHeader() {\r\n  const currentMonth = useStoreState((state) => state.currentMonth);\r\n  const prevMonth = useStoreActions((actions) => actions.prevMonth);\r\n  const nextMonth = useStoreActions((actions) => actions.nextMonth);\r\n\r\n  const dateFormat = \"MMMM yyyy\";\r\n  return (\r\n    <div className=\"header row flex-middle\">\r\n      <MonthNavArrow\r\n        place=\"start\"\r\n        direction=\"left\"\r\n        action={() => prevMonth(currentMonth)}\r\n      />\r\n      <div className=\"col col-center header-title\">\r\n        <span>{dateFns.format(currentMonth, dateFormat)}</span>\r\n      </div>\r\n      <MonthNavArrow\r\n        place=\"end\"\r\n        direction=\"right\"\r\n        action={() => nextMonth(currentMonth)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarHeader;\r\n","import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction CalendarDayNames() {\r\n  const dayNames = [];\r\n  for (let dayName of [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]) {\r\n    dayNames.push(\r\n      <div className=\"col col-center\" key={dayName}>\r\n        {dayName}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div className=\"days row\">{dayNames}</div>;\r\n}\r\n\r\nexport default CalendarDayNames;\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    // maxWidth: 220,\r\n    // fontSize: theme.typography.pxToRem(12),\r\n  },\r\n}))(Tooltip);\r\n\r\nfunction DayNotifier(props) {\r\n  const title = props.items.map((item) => (\r\n    <Typography key={props.items.indexOf(item)}>{item}</Typography>\r\n  ));\r\n\r\n  return (\r\n    <HtmlTooltip arrow placement=\"top\" title={title}>\r\n      <span className={`icon`}>{props.icon}</span>\r\n    </HtmlTooltip>\r\n  );\r\n}\r\n\r\nexport default DayNotifier;\r\n","import React from \"react\";\r\nimport { MuiPickersUtilsProvider, TimePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst StyledTimePicker = withStyles({\r\n  root: {\r\n    width: \"5.5rem\",\r\n    margin: \"0.5rem\",\r\n  },\r\n})(TimePicker);\r\n\r\nfunction ModalTimeRangePicker(props) {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <StyledTimePicker\r\n        label=\"Start\"\r\n        value={props.shiftStartTime}\r\n        onChange={props.setShiftStartTime}\r\n        minutesStep={5}\r\n      />\r\n      <StyledTimePicker\r\n        label=\"End\"\r\n        value={props.shiftEndTime}\r\n        onChange={props.setShiftEndTime}\r\n        minutesStep={5}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nexport default ModalTimeRangePicker;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction ModalNotifier(props) {\r\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\r\n  if (props.items.length < 1) {\r\n    return (\r\n      <Button disabled>\r\n        <span className={`icon notifier`}>{props.icon}</span>\r\n      </Button>\r\n    );\r\n  }\r\n  const handleTooltipOpen = () => {\r\n    setTooltipOpen(true);\r\n  };\r\n  const title = props.items.map((item) => (\r\n    <Typography key={props.items.indexOf(item)}>{item}</Typography>\r\n  ));\r\n\r\n  return (\r\n    <Tooltip arrow placement=\"top\" title={title} onClose={() => setTooltipOpen(false)} open={tooltipOpen}>\r\n      <Button onClick={handleTooltipOpen} onMouseOver={handleTooltipOpen}>\r\n        <span className={`icon notifier`}>{props.icon}</span>\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default ModalNotifier;\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ModalTimeRangePicker from \"./ModalTimeRangePicker\";\r\nimport ModalNotifier from \"./ModalNotifier\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction DayModal(props) {\r\n  const dateFormat = \"EEEE, MMMM d\";\r\n  const modalTitle = dateFns.format(props.day, dateFormat);\r\n  const userHasShift = props.userShift !== undefined;\r\n  // console.log(props.day, userHasShift);\r\n\r\n  React.useEffect(() => {\r\n    setShiftStartTime(\r\n      userHasShift ? props.userShift.startTime : props.day.setHours(8)\r\n    );\r\n    setShiftEndTime(\r\n      userHasShift ? props.userShift.endTime : props.day.setHours(16)\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [userHasShift]);\r\n\r\n  const loggedUser = useStoreState((state) => state.loggedUser);\r\n  const addShift = useStoreActions((actions) => actions.addShift);\r\n  const delShift = useStoreActions((actions) => actions.delShift);\r\n  const addMessage = useStoreActions((actions) => actions.addMessage);\r\n\r\n  const [shiftStartTime, setShiftStartTime] = React.useState(null);\r\n  const [shiftEndTime, setShiftEndTime] = React.useState(null);\r\n  const [messageValue, setMessageValue] = React.useState(\"\");\r\n\r\n  const DisplayAddMessage = loggedUser.isAdmin ? \"\" : \"none\";\r\n  const DisplayDelShift = userHasShift ? \"\" : \"none\";\r\n  const DisplayReserveDay = !userHasShift ? \"\" : \"none\";\r\n  const DisplaySave = !userHasShift || messageValue.length > 1 ? \"\" : \"none\";\r\n\r\n  const dayForDB = props.day.setHours(8);\r\n  // This was the source of much frustration. It's a\r\n  // yucky solution, but it solves the timezone communication\r\n  // problems with the DB without too much extra work.\r\n\r\n  function handleReserveDay() {\r\n    const newShiftPayload = {\r\n      day: dayForDB,\r\n      newShift: {\r\n        user: loggedUser.name,\r\n        startTime: shiftStartTime,\r\n        endTime: shiftEndTime,\r\n        isAllDay: true,\r\n      },\r\n    };\r\n    console.log(newShiftPayload);\r\n    addShift(newShiftPayload);\r\n    props.onModalClose();\r\n  }\r\n\r\n  function saveModalInput() {\r\n    if (messageValue.length < 1) {\r\n      // addShift if nothing in message textfield\r\n      const newShiftPayload = {\r\n        day: dayForDB,\r\n        newShift: {\r\n          user: loggedUser.name,\r\n          startTime: shiftStartTime,\r\n          endTime: shiftEndTime,\r\n          isAllDay: false,\r\n        },\r\n      };\r\n      console.log(newShiftPayload);\r\n      addShift(newShiftPayload);\r\n      props.onModalClose();\r\n    } else {\r\n      // addMessage if anything in message textfield\r\n      const newMessagePayload = {\r\n        day: dayForDB,\r\n        newMessage: {\r\n          user: loggedUser.name,\r\n          content: messageValue,\r\n        },\r\n      };\r\n      addMessage(newMessagePayload);\r\n      setMessageValue(\"\");\r\n    }\r\n  }\r\n\r\n  function handleDelShift() {\r\n    const shiftPayload = {\r\n      day: dayForDB,\r\n      user: props.userShift.user,\r\n    };\r\n    delShift(shiftPayload);\r\n    props.onModalClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isModalOpen}\r\n      onClose={props.onModalClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      className=\"day-modal\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{modalTitle}</DialogTitle>\r\n      <DialogContent>\r\n        <ModalNotifier icon=\"report\" items={props.dayAlerts} />\r\n        <ModalNotifier icon=\"textsms\" items={props.dayFormattedMessages} />\r\n        <ModalNotifier icon=\"people_alt\" items={props.dayWorkers} />\r\n        <hr />\r\n        <div style={{ display: DisplayReserveDay }}>\r\n          <Tooltip arrow placement=\"top\" title=\"Reserve full day\">\r\n            <Button\r\n              onClick={handleReserveDay}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              disableElevation\r\n              style={{\r\n                background: \"rgba(255, 255, 0, 0.2)\",\r\n                border: \"1px lightgrey solid\",\r\n              }}\r\n            >\r\n              <span className={`icon`}>bookmark_border</span>Reserve all day\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={`time-range-picker ${props.dayColor}`}>\r\n          <ModalTimeRangePicker\r\n            day={props.day}\r\n            shiftStartTime={shiftStartTime}\r\n            setShiftStartTime={setShiftStartTime}\r\n            shiftEndTime={shiftEndTime}\r\n            setShiftEndTime={setShiftEndTime}\r\n          />\r\n        </div>\r\n        <div style={{ display: DisplayDelShift }}>\r\n          <Tooltip arrow placement=\"top\" title=\"Delete shift\">\r\n            <Button\r\n              onClick={handleDelShift}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              disableElevation\r\n            >\r\n              <span className={`icon`}>delete</span>Delete shift\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n        <div style={{ display: DisplayAddMessage }}>\r\n          <TextField\r\n            autoFocus={false}\r\n            id=\"name\"\r\n            label=\"Add a Message\"\r\n            type=\"name\"\r\n            fullWidth\r\n            value={messageValue}\r\n            onChange={(event) => {\r\n              setMessageValue(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <div style={{ display: DisplaySave }}>\r\n          <Button onClick={saveModalInput} color=\"primary\" size=\"small\">\r\n            save\r\n          </Button>\r\n        </div>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default DayModal;\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nimport DayNotifier from \"./DayNotifier\";\r\nimport DayModal from \"./DayModal/DayModal\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction DayCell(props) {\r\n  const selectedDate = useStoreState((state) => state.selectedDate);\r\n  const onSelectDate = useStoreActions((actions) => actions.onSelectDate);\r\n  const loggedUser = useStoreState((state) => state.loggedUser);\r\n\r\n  ///////////////////////////////////////////////////////\r\n  // console.log(props.dayData)\r\n  // if (dateFns.isFirstDayOfMonth(props.day)) {\r\n  //   console.log(localStorage.getItem('username'))\r\n  //   console.log(loggedUser)\r\n  // }\r\n\r\n  const [isModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const dayShifts = props.dayData === undefined ? [] : props.dayData.shifts;\r\n  const dayAlerts = props.dayData === undefined ? [] : props.dayData.alerts;\r\n  const dayMessages = props.dayData === undefined ? [] : props.dayData.messages;\r\n\r\n  const userShift = dayShifts.find((shift) => shift.user === loggedUser.name);\r\n  const dayColor =\r\n    userShift === undefined ? null : userShift.isAllDay ? \"yellow\" : \"green\";\r\n\r\n  const cellClassName = !dateFns.isSameMonth(props.day, props.monthStart)\r\n    ? \"disabled\"\r\n    : dateFns.isSaturday(props.day)\r\n    ? \"closed\"\r\n    : dateFns.isSameDay(props.day, props.selectedDate)\r\n    ? \"selected\"\r\n    : null;\r\n\r\n  const dayWorkers = dayShifts.map((shift) => shift.user);\r\n\r\n  const dayFormattedMessages = dayMessages.map(\r\n    (message) => `${message.user}: ${message.content}`\r\n  );\r\n\r\n  const messagesNotifier = dayMessages.length < 1 ? null : (\r\n    <DayNotifier icon=\"textsms\" items={dayFormattedMessages} key=\"m\" />\r\n  );\r\n  const alertsNotifier = dayAlerts.length < 1 ? null : (\r\n    <DayNotifier icon=\"report\" items={dayAlerts} key=\"a\" />\r\n  );\r\n  const dayNotifiers = props.dayData === undefined\r\n    ? null\r\n    : [messagesNotifier, alertsNotifier];\r\n\r\n  function onDateClick(day) {\r\n    if (dateFns.isSameDay(day, selectedDate)) {\r\n      setModalOpen(true);\r\n    } else {\r\n      onSelectDate(day);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`col cell ${cellClassName}`}\r\n        onClick={() => onDateClick(dateFns.toDate(props.day))}\r\n      >\r\n        <span className={`number ${dayColor}`}>{props.formattedDate}</span>\r\n        <span className=\"bg\">{props.formattedDate}</span>\r\n        <div className=\"notifiers-area\">{dayNotifiers}</div>\r\n      </div>\r\n      <DayModal\r\n        day={props.day}\r\n        isModalOpen={isModalOpen}\r\n        onModalClose={() => setModalOpen(false)}\r\n        dayFormattedMessages={dayFormattedMessages}\r\n        dayWorkers={dayWorkers}\r\n        dayAlerts={dayAlerts}\r\n        userShift={userShift}\r\n        dayColor={dayColor}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DayCell;\r\n","import React from \"react\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nimport DayCell from \"./DayCell/DayCell\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction CalendarDayCells() {\r\n  const currentMonth = useStoreState((state) => state.currentMonth);\r\n  const selectedDate = useStoreState((state) => state.selectedDate);\r\n  const data = useStoreState((state) => state.data);\r\n  // console.log(data)\r\n\r\n  const monthStart = dateFns.startOfMonth(currentMonth);\r\n  const monthEnd = dateFns.endOfMonth(monthStart);\r\n  const startDate = dateFns.startOfWeek(monthStart);\r\n  const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n  const dateFormat = \"d\";\r\n  const rows = [];\r\n\r\n  let days = [];\r\n  let day = startDate;\r\n\r\n  while (day <= endDate) {\r\n    for (let i = 0; i < 7; i++) {\r\n      const formattedDate = dateFns.format(day, dateFormat);\r\n      // eslint-disable-next-line\r\n      const dayData = data.find((dbDay) =>\r\n        dateFns.isSameDay(new Date(dbDay.date), day)\r\n      );\r\n      days.push(\r\n        <DayCell\r\n          key={day}\r\n          day={day}\r\n          dayData={dayData}\r\n          monthStart={monthStart}\r\n          selectedDate={selectedDate}\r\n          formattedDate={formattedDate}\r\n        />\r\n      );\r\n      day = dateFns.addDays(day, 1);\r\n    }\r\n    rows.push(\r\n      <div className=\"row\" key={day}>\r\n        {days}\r\n      </div>\r\n    );\r\n    days = [];\r\n  }\r\n  return <div className=\"body\">{rows}</div>;\r\n}\r\n\r\nexport default CalendarDayCells;\r\n","import React, { useEffect } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nimport CalendarHeader from \"./CalendarHeader/CalendarHeader\";\r\nimport CalendarDayNames from \"./CalendarDayNames/CalendarDayNames\";\r\nimport CalendarDayCells from \"./CalendarDayCells/CalendarDayCells\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction Calendar() {\r\n\r\n  const fetchData = useStoreActions(actions => actions.fetchData);\r\n  const fetchLoggedUser = useStoreActions(actions => actions.fetchLoggedUser);\r\n\r\n  useEffect(() => {\r\n    const username = localStorage.getItem(\"username\");\r\n    if (username) {\r\n      fetchData();\r\n      fetchLoggedUser(username);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <CalendarHeader />\r\n      <CalendarDayNames />\r\n      <CalendarDayCells />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LoyaltyOutlinedIcon from \"@material-ui/icons/LoyaltyOutlined\";\r\n\r\nimport TagforceLogo from \"../../tagforce_logo_and_text_black.jpg\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst host = \"tagluz.azurewebsites.net\";\r\n\r\nfunction LoginPage(props) {\r\n  const [usernameValue, setuserNameValue] = React.useState(\"\");\r\n  const [passwordValue, setPasswordValue] = React.useState(\"\");\r\n  const setIsUserKnown = props.setIsUserKnown;\r\n\r\n  function authorizeUser(userNameValue, passwordValue) {\r\n    fetch(`https://${host}/users/checkUser/${usernameValue}/${passwordValue}`)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          localStorage.setItem(\"username\", usernameValue);\r\n          setIsUserKnown(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"column\">\r\n        <IconButton color=\"inherit\" className=\"logos\">\r\n          <span className=\"logo-first-item\">\r\n            <img src={TagforceLogo} alt=\"Tagforce logo\" height=\"30em\" />\r\n          </span>\r\n          <span className=\"logo-divider\">|</span>\r\n          <LoyaltyOutlinedIcon />\r\n          <Typography\r\n            variant=\"overline\"\r\n            style={{ margin: \"0.8em 0em 0em 0.25em\" }}\r\n          >\r\n            Tagluz\r\n          </Typography>\r\n        </IconButton>\r\n        <div className=\"row\">\r\n          <TextField\r\n            label=\"Username:\"\r\n            id=\"username\"\r\n            type=\"username\"\r\n            autoFocus={false}\r\n            fullWidth={false}\r\n            value={usernameValue}\r\n            onChange={(event) => {\r\n              setuserNameValue(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <TextField\r\n            label=\"Password:\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            autoFocus={false}\r\n            fullWidth={false}\r\n            value={passwordValue}\r\n            onChange={(event) => {\r\n              setPasswordValue(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button\r\n            onClick={() => authorizeUser(usernameValue, passwordValue)}\r\n            color=\"primary\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          >\r\n            Log In\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store/store\";\n\nimport Footer from './components/Footer/Footer'\nimport Header from \"./components/Header/AppBar\";\nimport Calendar from \"./components/Calendar/Calendar\";\n\nimport LoginPage from \"./components/LoginPage/LoginPage\";\n\nfunction App() {\n  const [isUserKnown, setIsUserKnown] = React.useState(\n    localStorage.getItem(\"username\") !== null\n  );\n  const [redirect, setRedirect] = React.useState(\"\");\n\n  useEffect(() => {\n    isUserKnown ? setRedirect(\"/calendar\") : setRedirect(\"/login\");\n  }, [isUserKnown]);\n\n  return (\n    <div className=\"App\">\n      <StoreProvider store={store}>\n        <Router>\n          {redirect ? <Redirect to={redirect} /> : <></>}\n          <Switch>\n            <Route path=\"/login\">\n              <LoginPage\n                isUserKnown={isUserKnown}\n                setIsUserKnown={setIsUserKnown}\n              />\n            </Route>\n            <Route path=\"/calendar\">\n              <Header />\n              <main>\n                <Calendar />\n              </main>\n              <Footer />\n            </Route>\n            <Route path=\"*\">\n              <Redirect to={redirect} />\n            </Route>\n          </Switch>\n        </Router>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}