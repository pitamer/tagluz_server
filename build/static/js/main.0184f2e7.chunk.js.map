{"version":3,"sources":["tagforce_logo_and_text_black.jpg","store/model.js","store/store.js","components/LoginPage/LoginPage.js","components/Header/AddUserModal.js","components/Header/InfoModal.js","components/Header/UserMenu.js","components/Header/AppBar.js","components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarDayNames/CalendarDayNames.js","components/Calendar/CalendarDayCells/DayCell/DayNotifier.js","components/Calendar/CalendarDayCells/DayCell/DayModal/ModalTimeRangePicker.js","components/Calendar/CalendarDayCells/DayCell/DayModal/ModalNotifier.js","components/Calendar/CalendarDayCells/DayCell/DayModal/DayModal.js","components/Calendar/CalendarDayCells/DayCell/DayCell.js","components/Calendar/CalendarDayCells/CalendarDayCells.js","components/Calendar/Calendar.js","App.js","index.js"],"names":["module","exports","host","model","data","setData","action","state","fetchData","thunk","actions","a","fetch","res","json","loggedUser","setLoggedUser","fetchLoggedUser","payload","userData","currentMonth","Date","selectedDate","onSelectDate","day","nextMonth","dateFns","prevMonth","addShift","method","headers","body","JSON","stringify","updatedData","addMessage","delShift","store","createStore","LoginPage","props","React","useState","usernameValue","setuserNameValue","passwordValue","setPasswordValue","setIsUserKnown","className","IconButton","color","src","TagforceLogo","alt","height","Typography","variant","style","margin","TextField","label","id","type","autoFocus","fullWidth","value","onChange","event","target","Button","onClick","userNameValue","then","resp","localStorage","setItem","authorizeUser","AddUserModal","isUserModalOpen","setUserModalOpen","nameValue","setNameValue","appointAdmin","setAppointAdmin","display","marginRight","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","icon","checkedIcon","name","DialogActions","isAdmin","console","log","makeUser","size","InfoModal","isModalOpen","onModalClose","aria-describedby","DialogContentText","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","StyledMenuItem","theme","root","backgroundColor","palette","common","white","MenuItem","UserMenu","anchorEl","setAnchorEl","aria-haspopup","aria-controls","currentTarget","keepMounted","Boolean","ListItemIcon","fontSize","ListItemText","primary","username","clear","document","location","href","useStyles","makeStyles","flexGrow","zIndex","position","appBar","background","title","spacing","titleText","ButtonAppBar","isInfoModalOpen","setInfoModalOpen","useStoreState","classes","DisplayAddUser","AppBar","Toolbar","CalendarHeader","useStoreActions","textAlign","item","justifyContent","Grid","container","xs","CalendarDayNames","dayNames","dayName","push","key","HtmlTooltip","tooltip","Tooltip","DayNotifier","items","map","indexOf","arrow","placement","StyledTimePicker","width","TimePicker","ModalTimeRangePicker","utils","DateFnsUtils","shiftStartTime","setShiftStartTime","minutesStep","shiftEndTime","setShiftEndTime","ModalNotifier","tooltipOpen","setTooltipOpen","length","disabled","handleTooltipOpen","onMouseOver","DayModal","modalTitle","userHasShift","undefined","userShift","useEffect","startTime","setHours","endTime","messageValue","setMessageValue","DisplayAddMessage","DisplayDelShift","DisplayReserveDay","DisplaySave","dayForDB","dayAlerts","dayFormattedMessages","dayWorkers","newShiftPayload","newShift","user","isAllDay","disableElevation","dayColor","shiftPayload","newMessagePayload","newMessage","content","DayCell","setModalOpen","dayShifts","dayData","shifts","alerts","dayMessages","messages","find","shift","cellClassName","monthStart","message","messagesNotifier","alertsNotifier","dayNotifiers","formattedDate","CalendarDayCells","monthEnd","startDate","endDate","rows","days","i","dbDay","date","Calendar","getItem","App","isUserKnown","redirect","setRedirect","to","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0184f2e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tagforce_logo_and_text_black.d5eefb90.jpg\";","import { action, thunk } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nconst host = \"tagluz.azurewebsites.net\";\r\n\r\nconst model = {\r\n  data: [],\r\n\r\n  setData: action((state, data) => {\r\n    state.data = data;\r\n    // console.log(data)\r\n  }),\r\n\r\n  fetchData: thunk(async (actions) => {\r\n    const res = await fetch(`https://${host}/days/getAll`);\r\n    const data = await res.json();\r\n    actions.setData(data);\r\n  }),\r\n\r\n  loggedUser: {},\r\n\r\n  setLoggedUser: action((state, loggedUser) => {\r\n    state.loggedUser = loggedUser;\r\n  }),\r\n\r\n  fetchLoggedUser: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/users/getUser/${payload}`);\r\n    const userData = await res.json();\r\n    actions.setLoggedUser(userData);\r\n  }),\r\n\r\n  currentMonth: new Date(),\r\n  selectedDate: new Date(),\r\n\r\n  onSelectDate: action((state, day) => {\r\n    state.selectedDate = day;\r\n  }),\r\n\r\n  nextMonth: action((state, currentMonth) => {\r\n    state.currentMonth = dateFns.addMonths(currentMonth, 1);\r\n  }),\r\n\r\n  prevMonth: action((state, currentMonth) => {\r\n    state.currentMonth = dateFns.subMonths(currentMonth, 1);\r\n  }),\r\n\r\n  addShift: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/days/addShift`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const updatedData = await res.json();\r\n    actions.setData(updatedData);\r\n  }),\r\n\r\n  addMessage: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/days/addMessage`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const updatedData = await res.json();\r\n    actions.setData(updatedData);\r\n  }),\r\n\r\n  delShift: thunk(async (actions, payload) => {\r\n    const res = await fetch(`https://${host}/days/deleteShift`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const updatedData = await res.json();\r\n    actions.setData(updatedData);\r\n  }),\r\n};\r\n\r\nexport default model;\r\n","import { createStore } from \"easy-peasy\";\r\nimport model from \"./model\";\r\n\r\nconst store = createStore(model);\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LoyaltyOutlinedIcon from \"@material-ui/icons/LoyaltyOutlined\";\r\n\r\nimport TagforceLogo from \"../../tagforce_logo_and_text_black.jpg\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst host = \"tagluz.azurewebsites.net\";\r\n\r\nfunction LoginPage(props) {\r\n  const [usernameValue, setuserNameValue] = React.useState(\"\");\r\n  const [passwordValue, setPasswordValue] = React.useState(\"\");\r\n  const setIsUserKnown = props.setIsUserKnown;\r\n\r\n  function authorizeUser(userNameValue, passwordValue) {\r\n    fetch(`https://${host}/users/checkUser/${usernameValue}/${passwordValue}`)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          localStorage.setItem(\"username\", usernameValue);\r\n          setIsUserKnown(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"column\">\r\n        <IconButton color=\"inherit\" className=\"logos\">\r\n          <span className=\"logo-first-item\">\r\n            <img src={TagforceLogo} alt=\"Tagforce logo\" height=\"30em\" />\r\n          </span>\r\n          <span className=\"logo-divider\">|</span>\r\n          <LoyaltyOutlinedIcon />\r\n          <Typography\r\n            variant=\"overline\"\r\n            style={{ margin: \"0.8em 0em 0em 0.25em\" }}\r\n          >\r\n            Tagluz\r\n          </Typography>\r\n        </IconButton>\r\n        <div className=\"row\">\r\n          <TextField\r\n            label=\"Username:\"\r\n            id=\"username\"\r\n            type=\"username\"\r\n            autoFocus={false}\r\n            fullWidth={false}\r\n            value={usernameValue}\r\n            onChange={(event) => {\r\n              setuserNameValue(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <TextField\r\n            label=\"Password:\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            autoFocus={false}\r\n            fullWidth={false}\r\n            value={passwordValue}\r\n            onChange={(event) => {\r\n              setPasswordValue(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button\r\n            onClick={() => authorizeUser(usernameValue, passwordValue)}\r\n            color=\"primary\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          >\r\n            Log In\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n// import { useStoreState/*, useStoreActions*/ } from \"easy-peasy\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport VerifiedUserOutlinedIcon from \"@material-ui/icons/VerifiedUserOutlined\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst host = \"tagluz.azurewebsites.net\";\r\n\r\nconst AddUserModal = (props) => {\r\n  const [isUserModalOpen, setUserModalOpen] = React.useState(false);\r\n  const [nameValue, setNameValue] = React.useState(\"\");\r\n  const [appointAdmin, setAppointAdmin] = React.useState(false);\r\n\r\n  function makeUser() {\r\n    const body = { name: nameValue, isAdmin: appointAdmin };\r\n    fetch(`https://${host}/users/mkUser`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }).then((resp) => {\r\n      console.log(\"posted new user!\");\r\n    });\r\n  }\r\n\r\n  function handleAddUser() {\r\n    makeUser();\r\n    setNameValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{ display: props.display, marginRight: \"1rem\" }}\r\n        onClick={() => setUserModalOpen(true)}\r\n      >\r\n        <PersonAddIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={isUserModalOpen}\r\n        onClose={() => setUserModalOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        className=\"add-user-modal\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add a User</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus={true}\r\n            label=\"User Name:\"\r\n            id=\"name\"\r\n            type=\"name\"\r\n            fullWidth={false}\r\n            value={nameValue}\r\n            onChange={(event) => {\r\n              setNameValue(event.target.value);\r\n            }}\r\n          />\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  icon={<VerifiedUserOutlinedIcon />}\r\n                  checkedIcon={<VerifiedUserIcon />}\r\n                  name=\"makeAdmin\"\r\n                  color=\"secondary\"\r\n                  value={appointAdmin}\r\n                  onChange={() => setAppointAdmin(!appointAdmin)}\r\n                />\r\n              }\r\n              label=\"Appoint user admin\"\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAddUser} color=\"primary\" size=\"small\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUserModal;\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction InfoModal(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.isModalOpen}\r\n      onClose={props.onModalClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">About Tagluz</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <div>Tagluz 0.91</div>\r\n          <div>By Pitamer</div>\r\n          <div>With lots of help from Ariel</div>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onModalClose} color=\"primary\" autoFocus>\r\n          Nice :)\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default InfoModal;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import Button from '@material-ui/core/Button';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  },\r\n})((props) => <Menu elevation={0} getContentAnchorEl={null} {...props} />);\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:focus\": {\r\n      backgroundColor: \"var(--main-color)\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function UserMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  function onLogout() {\r\n    localStorage.clear();\r\n    document.location.href = \"/\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-haspopup=\"true\"\r\n        aria-controls=\"user-menu\"\r\n        onClick={handleClick}\r\n      >\r\n        <AccountCircleIcon />\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <AccountCircleIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.username} />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={onLogout}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Logout\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\n// import TodayIcon from '@material-ui/icons/Today';\r\n// import TimerIcon from '@material-ui/icons/Timer';\r\nimport LoyaltyOutlinedIcon from \"@material-ui/icons/LoyaltyOutlined\";\r\n\r\nimport AddUserModal from \"./AddUserModal\";\r\nimport InfoModal from \"./InfoModal\";\r\nimport UserMenu from \"./UserMenu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 2,\r\n    position: \"relative\",\r\n  },\r\n  appBar: {\r\n    background: \"var(--main-color)\",\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(2),\r\n    flexGrow: 1,\r\n  },\r\n  titleText: {\r\n    margin: \"0em 0em 0em 0.5em\",\r\n  },\r\n}));\r\n\r\nfunction ButtonAppBar() {\r\n  const [isInfoModalOpen, setInfoModalOpen] = React.useState(false);\r\n\r\n  const loggedUser = useStoreState((state) => state.loggedUser);\r\n\r\n  const classes = useStyles();\r\n  const DisplayAddUser = loggedUser.isAdmin ? \"\" : \"none\";\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.appBar}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            onClick={() => setInfoModalOpen(true)}\r\n          >\r\n            <IconButton color=\"inherit\" className={classes.title}>\r\n              <LoyaltyOutlinedIcon />\r\n              <Typography variant=\"button\" className={classes.titleText}>\r\n                Tagluz\r\n              </Typography>\r\n            </IconButton>\r\n          </Typography>\r\n          <InfoModal\r\n            isModalOpen={isInfoModalOpen}\r\n            onModalClose={() => setInfoModalOpen(false)}\r\n          />\r\n          {/* <IconButton color=\"inherit\">\r\n            <TodayIcon />\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <TimerIcon />\r\n          </IconButton> */}\r\n          <AddUserModal display={DisplayAddUser} />\r\n          <UserMenu username={loggedUser.name}/>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport * as dateFns from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// import MonthNavArrow from \"./MonthNavArrow\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction CalendarHeader() {\r\n  const currentMonth = useStoreState((state) => state.currentMonth);\r\n  const prevMonth = useStoreActions((actions) => actions.prevMonth);\r\n  const nextMonth = useStoreActions((actions) => actions.nextMonth);\r\n\r\n  const dateFormat = \"MMMM yyyy\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      textAlign: \"center\",\r\n      // display: 'flex'\r\n    },\r\n    item: {\r\n      justifyContent: \"center\",\r\n      // textAlign: \"center\",\r\n      display: \"flex\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={`header ${classes.root}`}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <div\r\n            className={`icon ${classes.item}`}\r\n            onClick={() => prevMonth(currentMonth)}\r\n          >\r\n            chevron_left\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div className={`header-title`}>\r\n            <span>{dateFns.format(currentMonth, dateFormat)}</span>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <div\r\n            className={`icon ${classes.item}`}\r\n            onClick={() => nextMonth(currentMonth)}\r\n          >\r\n            chevron_right\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarHeader;\r\n","import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction CalendarDayNames() {\r\n  const dayNames = [];\r\n  for (let dayName of [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]) {\r\n    dayNames.push(\r\n      <div className=\"col col-center\" key={dayName}>\r\n        {dayName}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div className=\"days row\">{dayNames}</div>;\r\n}\r\n\r\nexport default CalendarDayNames;\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    // maxWidth: 220,\r\n    // fontSize: theme.typography.pxToRem(12),\r\n  },\r\n}))(Tooltip);\r\n\r\nfunction DayNotifier(props) {\r\n  const title = props.items.map((item) => (\r\n    <Typography key={props.items.indexOf(item)}>{item}</Typography>\r\n  ));\r\n\r\n  return (\r\n    <HtmlTooltip arrow placement=\"top\" title={title}>\r\n      <span className={`icon`}>{props.icon}</span>\r\n    </HtmlTooltip>\r\n  );\r\n}\r\n\r\nexport default DayNotifier;\r\n","import React from \"react\";\r\nimport { MuiPickersUtilsProvider, TimePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst StyledTimePicker = withStyles({\r\n  root: {\r\n    width: \"5.5rem\",\r\n    margin: \"0.5rem\",\r\n  },\r\n})(TimePicker);\r\n\r\nfunction ModalTimeRangePicker(props) {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <StyledTimePicker\r\n        label=\"Start\"\r\n        value={props.shiftStartTime}\r\n        onChange={props.setShiftStartTime}\r\n        minutesStep={5}\r\n      />\r\n      <StyledTimePicker\r\n        label=\"End\"\r\n        value={props.shiftEndTime}\r\n        onChange={props.setShiftEndTime}\r\n        minutesStep={5}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nexport default ModalTimeRangePicker;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction ModalNotifier(props) {\r\n  const [tooltipOpen, setTooltipOpen] = React.useState(false);\r\n  if (props.items.length < 1) {\r\n    return (\r\n      <Button disabled>\r\n        <span className={`icon notifier`}>{props.icon}</span>\r\n      </Button>\r\n    );\r\n  }\r\n  const handleTooltipOpen = () => {\r\n    setTooltipOpen(true);\r\n  };\r\n  const title = props.items.map((item) => (\r\n    <Typography key={props.items.indexOf(item)}>{item}</Typography>\r\n  ));\r\n\r\n  return (\r\n    <Tooltip arrow placement=\"top\" title={title} onClose={() => setTooltipOpen(false)} open={tooltipOpen}>\r\n      <Button onClick={handleTooltipOpen} onMouseOver={handleTooltipOpen}>\r\n        <span className={`icon notifier`}>{props.icon}</span>\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default ModalNotifier;\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ModalTimeRangePicker from \"./ModalTimeRangePicker\";\r\nimport ModalNotifier from \"./ModalNotifier\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction DayModal(props) {\r\n  const dateFormat = \"EEEE, MMMM d\";\r\n  const modalTitle = dateFns.format(props.day, dateFormat);\r\n  const userHasShift = props.userShift !== undefined;\r\n  // console.log(props.day, userHasShift);\r\n\r\n  React.useEffect(() => {\r\n    setShiftStartTime(\r\n      userHasShift ? props.userShift.startTime : props.day.setHours(8)\r\n    );\r\n    setShiftEndTime(\r\n      userHasShift ? props.userShift.endTime : props.day.setHours(16)\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [userHasShift]);\r\n\r\n  const loggedUser = useStoreState((state) => state.loggedUser);\r\n  const addShift = useStoreActions((actions) => actions.addShift);\r\n  const delShift = useStoreActions((actions) => actions.delShift);\r\n  const addMessage = useStoreActions((actions) => actions.addMessage);\r\n\r\n  const [shiftStartTime, setShiftStartTime] = React.useState(null);\r\n  const [shiftEndTime, setShiftEndTime] = React.useState(null);\r\n  const [messageValue, setMessageValue] = React.useState(\"\");\r\n\r\n  const DisplayAddMessage = loggedUser.isAdmin ? \"\" : \"none\";\r\n  const DisplayDelShift = userHasShift ? \"\" : \"none\";\r\n  const DisplayReserveDay = !userHasShift ? \"\" : \"none\";\r\n  const DisplaySave = !userHasShift || messageValue.length > 1 ? \"\" : \"none\";\r\n\r\n  const dayForDB = props.day.setHours(8);\r\n  // This was the source of much frustration. It's a\r\n  // yucky solution, but it solves the timezone communication\r\n  // problems with the DB without too much extra work.\r\n\r\n  function handleReserveDay() {\r\n    const newShiftPayload = {\r\n      day: dayForDB,\r\n      newShift: {\r\n        user: loggedUser.name,\r\n        startTime: shiftStartTime,\r\n        endTime: shiftEndTime,\r\n        isAllDay: true,\r\n      },\r\n    };\r\n    console.log(newShiftPayload);\r\n    addShift(newShiftPayload);\r\n    props.onModalClose();\r\n  }\r\n\r\n  function saveModalInput() {\r\n    if (messageValue.length < 1) {\r\n      // addShift if nothing in message textfield\r\n      const newShiftPayload = {\r\n        day: dayForDB,\r\n        newShift: {\r\n          user: loggedUser.name,\r\n          startTime: shiftStartTime,\r\n          endTime: shiftEndTime,\r\n          isAllDay: false,\r\n        },\r\n      };\r\n      console.log(newShiftPayload);\r\n      addShift(newShiftPayload);\r\n      props.onModalClose();\r\n    } else {\r\n      // addMessage if anything in message textfield\r\n      const newMessagePayload = {\r\n        day: dayForDB,\r\n        newMessage: {\r\n          user: loggedUser.name,\r\n          content: messageValue,\r\n        },\r\n      };\r\n      addMessage(newMessagePayload);\r\n      setMessageValue(\"\");\r\n    }\r\n  }\r\n\r\n  function handleDelShift() {\r\n    const shiftPayload = {\r\n      day: dayForDB,\r\n      user: props.userShift.user,\r\n    };\r\n    delShift(shiftPayload);\r\n    props.onModalClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.isModalOpen}\r\n      onClose={props.onModalClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      className=\"day-modal\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{modalTitle}</DialogTitle>\r\n      <DialogContent>\r\n        <ModalNotifier icon=\"report\" items={props.dayAlerts} />\r\n        <ModalNotifier icon=\"textsms\" items={props.dayFormattedMessages} />\r\n        <ModalNotifier icon=\"people_alt\" items={props.dayWorkers} />\r\n        <hr />\r\n        <div style={{ display: DisplayReserveDay }}>\r\n          <Tooltip arrow placement=\"top\" title=\"Reserve full day\">\r\n            <Button\r\n              onClick={handleReserveDay}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              disableElevation\r\n              style={{\r\n                background: \"rgba(255, 255, 0, 0.2)\",\r\n                border: \"1px lightgrey solid\",\r\n              }}\r\n            >\r\n              <span className={`icon`}>bookmark_border</span>Reserve all day\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={`time-range-picker ${props.dayColor}`}>\r\n          <ModalTimeRangePicker\r\n            day={props.day}\r\n            shiftStartTime={shiftStartTime}\r\n            setShiftStartTime={setShiftStartTime}\r\n            shiftEndTime={shiftEndTime}\r\n            setShiftEndTime={setShiftEndTime}\r\n          />\r\n        </div>\r\n        <div style={{ display: DisplayDelShift }}>\r\n          <Tooltip arrow placement=\"top\" title=\"Delete shift\">\r\n            <Button\r\n              onClick={handleDelShift}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              disableElevation\r\n            >\r\n              <span className={`icon`}>delete</span>Delete shift\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n        <div style={{ display: DisplayAddMessage }}>\r\n          <TextField\r\n            autoFocus={false}\r\n            id=\"name\"\r\n            label=\"Add a Message\"\r\n            type=\"name\"\r\n            fullWidth\r\n            value={messageValue}\r\n            onChange={(event) => {\r\n              setMessageValue(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <div style={{ display: DisplaySave }}>\r\n          <Button onClick={saveModalInput} color=\"primary\" size=\"small\">\r\n            save\r\n          </Button>\r\n        </div>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default DayModal;\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nimport DayNotifier from \"./DayNotifier\";\r\nimport DayModal from \"./DayModal/DayModal\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction DayCell(props) {\r\n  const selectedDate = useStoreState((state) => state.selectedDate);\r\n  const onSelectDate = useStoreActions((actions) => actions.onSelectDate);\r\n  const loggedUser = useStoreState((state) => state.loggedUser);\r\n\r\n  ///////////////////////////////////////////////////////\r\n  // console.log(props.dayData)\r\n  // if (dateFns.isFirstDayOfMonth(props.day)) {\r\n  //   console.log(localStorage.getItem('username'))\r\n  //   console.log(loggedUser)\r\n  // }\r\n\r\n  const [isModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const dayShifts = props.dayData === undefined ? [] : props.dayData.shifts;\r\n  const dayAlerts = props.dayData === undefined ? [] : props.dayData.alerts;\r\n  const dayMessages = props.dayData === undefined ? [] : props.dayData.messages;\r\n\r\n  const userShift = dayShifts.find((shift) => shift.user === loggedUser.name);\r\n  const dayColor =\r\n    userShift === undefined ? null : userShift.isAllDay ? \"yellow\" : \"green\";\r\n\r\n  const cellClassName = !dateFns.isSameMonth(props.day, props.monthStart)\r\n    ? \"disabled\"\r\n    : dateFns.isSaturday(props.day)\r\n    ? \"closed\"\r\n    : dateFns.isSameDay(props.day, props.selectedDate)\r\n    ? \"selected\"\r\n    : null;\r\n\r\n  const dayWorkers = dayShifts.map((shift) => shift.user);\r\n\r\n  const dayFormattedMessages = dayMessages.map(\r\n    (message) => `${message.user}: ${message.content}`\r\n  );\r\n\r\n  const messagesNotifier = dayMessages.length < 1 ? null : (\r\n    <DayNotifier icon=\"textsms\" items={dayFormattedMessages} key=\"m\" />\r\n  );\r\n  const alertsNotifier = dayAlerts.length < 1 ? null : (\r\n    <DayNotifier icon=\"report\" items={dayAlerts} key=\"a\" />\r\n  );\r\n  const dayNotifiers = props.dayData === undefined\r\n    ? null\r\n    : [messagesNotifier, alertsNotifier];\r\n\r\n  function onDateClick(day) {\r\n    if (dateFns.isSameDay(day, selectedDate)) {\r\n      setModalOpen(true);\r\n    } else {\r\n      onSelectDate(day);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`col cell ${cellClassName}`}\r\n        onClick={() => onDateClick(dateFns.toDate(props.day))}\r\n      >\r\n        <span className={`number ${dayColor}`}>{props.formattedDate}</span>\r\n        <span className=\"bg\">{props.formattedDate}</span>\r\n        <div className=\"notifiers-area\">{dayNotifiers}</div>\r\n      </div>\r\n      <DayModal\r\n        day={props.day}\r\n        isModalOpen={isModalOpen}\r\n        onModalClose={() => setModalOpen(false)}\r\n        dayFormattedMessages={dayFormattedMessages}\r\n        dayWorkers={dayWorkers}\r\n        dayAlerts={dayAlerts}\r\n        userShift={userShift}\r\n        dayColor={dayColor}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DayCell;\r\n","import React from \"react\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport * as dateFns from \"date-fns\";\r\n\r\nimport DayCell from \"./DayCell/DayCell\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction CalendarDayCells() {\r\n  const currentMonth = useStoreState((state) => state.currentMonth);\r\n  const selectedDate = useStoreState((state) => state.selectedDate);\r\n  const data = useStoreState((state) => state.data);\r\n  // console.log(data)\r\n\r\n  const monthStart = dateFns.startOfMonth(currentMonth);\r\n  const monthEnd = dateFns.endOfMonth(monthStart);\r\n  const startDate = dateFns.startOfWeek(monthStart);\r\n  const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n  const dateFormat = \"d\";\r\n  const rows = [];\r\n\r\n  let days = [];\r\n  let day = startDate;\r\n\r\n  while (day <= endDate) {\r\n    for (let i = 0; i < 7; i++) {\r\n      const formattedDate = dateFns.format(day, dateFormat);\r\n      // eslint-disable-next-line\r\n      const dayData = data.find((dbDay) =>\r\n        dateFns.isSameDay(new Date(dbDay.date), day)\r\n      );\r\n      days.push(\r\n        <DayCell\r\n          key={day}\r\n          day={day}\r\n          dayData={dayData}\r\n          monthStart={monthStart}\r\n          selectedDate={selectedDate}\r\n          formattedDate={formattedDate}\r\n        />\r\n      );\r\n      day = dateFns.addDays(day, 1);\r\n    }\r\n    rows.push(\r\n      <div className=\"row\" key={day}>\r\n        {days}\r\n      </div>\r\n    );\r\n    days = [];\r\n  }\r\n  return <div className=\"body\">{rows}</div>;\r\n}\r\n\r\nexport default CalendarDayCells;\r\n","import React, { useEffect } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nimport CalendarHeader from \"./CalendarHeader/CalendarHeader\";\r\nimport CalendarDayNames from \"./CalendarDayNames/CalendarDayNames\";\r\nimport CalendarDayCells from \"./CalendarDayCells/CalendarDayCells\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction Calendar() {\r\n\r\n  const fetchData = useStoreActions(actions => actions.fetchData);\r\n  const fetchLoggedUser = useStoreActions(actions => actions.fetchLoggedUser);\r\n\r\n  useEffect(() => {\r\n    const username = localStorage.getItem(\"username\");\r\n    if (username) {\r\n      fetchData();\r\n      fetchLoggedUser(username);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <CalendarHeader />\r\n      <CalendarDayNames />\r\n      <CalendarDayCells />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store/store\";\n\nimport LoginPage from \"./components/LoginPage/LoginPage\";\n\n// import Footer from './components/Footer/Footer'\nimport Header from \"./components/Header/AppBar\";\nimport Calendar from \"./components/Calendar/Calendar\";\n\nfunction App() {\n  const [isUserKnown, setIsUserKnown] = React.useState(\n    localStorage.getItem(\"username\") !== null\n  );\n  const [redirect, setRedirect] = React.useState(\"\");\n\n  useEffect(() => {\n    isUserKnown ? setRedirect(\"/calendar\") : setRedirect(\"/login\");\n  }, [isUserKnown]);\n\n  return (\n    <div className=\"App\">\n      <StoreProvider store={store}>\n        <Router>\n          {redirect ? <Redirect to={redirect} /> : <></>}\n          <Switch>\n            <Route path=\"/login\">\n              <LoginPage\n                isUserKnown={isUserKnown}\n                setIsUserKnown={setIsUserKnown}\n              />\n            </Route>\n            <Route path=\"/calendar\">\n              <Header />\n              <main>\n                <Calendar />\n              </main>\n              {/* <Footer /> */}\n            </Route>\n            <Route path=\"*\">\n              <Redirect to={redirect} />\n            </Route>\n          </Switch>\n        </Router>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}